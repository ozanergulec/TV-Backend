name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Redis servisini test için ekle
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test with Redis
        run: dotnet test --no-build --verbosity normal
        env:
          Redis__ConnectionString: localhost:6379

  build:
    needs: test  # ← Test'ten sonra build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t mervecetin904/tv-backend .

      - name: Push Docker image to Docker Hub
        run: |
          docker tag mervecetin904/tv-backend mervecetin904/tv-backend:latest
          docker push mervecetin904/tv-backend:latest

      # Docker Compose test ekle
      - name: Test Docker Compose
        run: |
          docker-compose up -d --build
          sleep 30
          # Health check
          curl -f http://localhost:5000/swagger || exit 1
          docker-compose down

